# Customized config for sway
# Most of bindings come from the ArchLabs i3 config file
# Read `man 5 sway` for a complete reference.

exec xrdb -load ~/.Xresources

# border & title.. Must be set to border pixel for gaps to work
for_window [title="^.*"] border pixel 2, title_format "%class >> %title"

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4

set $gnome-schema org.gnome.desktop.interface

### Theme settings
# To check current theme settings: gsettings get org.gnome.desktop.interface gtk-theme
	exec_always {
		gsettings set $gnome-schema gtk-theme 'Numix-Frost'
		gsettings set $gnome-schema icon-theme 'Papirus'
		gsettings set $gnome-schema cursor-theme 'Adwaita'
	}

# Home row direction keys
	set $up l
	set $down k
	set $left j
	set $right semicolon

# monitors
	set $Mon1 eDP-1
	set $Mon2 HDMI-A-1

# gaps
	gaps inner 5
	gaps outer 5

# font
	font pango:DejaVu Sans Mono 10

#
# Autostart
#
	# exec_always nm-applet (does not work, fucker)

	# Dynamic workspace names
	exec /home/piotr/PycharmProjects/swayinfo/wsdnames-sway-dev.py -l

	# To run java swing(broken) applications (e.g. IntelliJ)
	exec wmname LG3D

	exec light -S 20
	exec amixer sset 'Master' 40%
	exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
	#exec lxpolkit
	exec gnome-keyring-daemon --start -bindsym-components=pkcs11

	# Your preferred terminal emulator
	set $term tilix

	set $editor mousepad
	set $browser chromium
	set $filemanager caja

# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway
	set $menu dmenu_path | dmenu | xargs swaymsg exec

xwayland enable

#
# Output configuration:
#
	output eDP-1 resolution 1920x1080 position 0,0
	output HDMI-A-1 resolution 1920x1080 position 1920,0
	# output HDMI-A-1 disable

	#output * bg /home/piotr/Obrazy/Wallpapers/wallhaven-zmoxry.jpg fill
	exec ~/.azotebg

#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
exec swayidle -w \
         timeout 600 'swaylock -f -c 000000' \
         timeout 900 'swaymsg "output * dpms off"' \
              resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 600 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

	# keyboard layout
	input * xkb_layout "pl"

	# numlock on
	input * xkb_numlock enabled

### Key bindings
#
# Basics:
#
    # start a terminal
    bindsym $mod+Return exec $term
    bindsym $mod+t exec $term
    bindsym $mod+g exec gimp

    # start text editor
    bindsym $mod+e exec $editor

    # start web browser
    bindsym $mod+w exec $browser

    # start wallpaper manager
    bindsym $mod+c exec azote

    # start file manager
    bindsym $mod+f exec $filemanager

    # kill focused window
    bindsym $mod+Shift+q kill
    bindsym Mod1+q kill

    # start your launcher
    bindsym $mod+d exec $menu

# launchers
    bindsym Control+space exec rofr.sh -r

# this is needed for super key to launch rofi
    bindsym Mod1+F1 exec rofr.sh -r

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # reload the configuration file
    bindsym $mod+Shift+c reload

# logout script
    bindsym $mod+x exec rofr.sh -l

# audio
	bindsym XF86AudioPlay exec playerctl play-pause
	bindsym XF86AudioNext exec playerctl next
	bindsym XF86AudioPrev exec playerctl previous
	bindsym XF86AudioStop exec playerctl stop
	bindsym XF86AudioRaiseVolume exec pamixer -i 2
	bindsym XF86AudioLowerVolume exec pamixer -d 2
	bindsym XF86AudioMute exec pamixer -t

# backlight
	bindsym XF86MonBrightnessUp exec light -A 5
	bindsym XF86MonBrightnessDown exec light -U 5

# Borders
    default_border normal
    default_floating_border normal
    hide_edge_borders both
    popup_during_fullscreen smart

	# changing border style
	bindsym $mod+n border normal
	bindsym $mod+u border none

    bindsym $mod+Shift+b border toggle
    bindsym mod1+Shift+f fullscreen toggle

    # exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Change gaps
#
	bindsym $mod+equal gaps inner current plus 5
	bindsym $mod+minus gaps inner current minus 5
	bindsym $mod+plus gaps outer current plus 5
	bindsym $mod+underscore gaps outer current minus 5

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # _move_ the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # workspace assignment
    workspace 1 output $Mon1
    workspace 2 output $Mon1
    workspace 3 output $Mon1
    workspace 4 output $Mon1
    workspace 5 output $Mon2
    workspace 6 output $Mon2
    workspace 7 output $Mon2
    workspace 8 output $Mon2

	# switch to workspace
	bindsym $mod+1 workspace number 1
	bindsym $mod+2 workspace number 2
	bindsym $mod+3 workspace number 3
	bindsym $mod+4 workspace number 4
	bindsym $mod+5 workspace number 5
	bindsym $mod+6 workspace number 6
	bindsym $mod+7 workspace number 7
	bindsym $mod+8 workspace number 8

	# move focused container to workspace
	bindsym $mod+Shift+1 move container to workspace number 1; workspace number 1
	bindsym $mod+Shift+2 move container to workspace number 2; workspace number 2
	bindsym $mod+Shift+3 move container to workspace number 3; workspace number 3
	bindsym $mod+Shift+4 move container to workspace number 4; workspace number 4
	bindsym $mod+Shift+5 move container to workspace number 5; workspace number 5
	bindsym $mod+Shift+6 move container to workspace number 6; workspace number 6
	bindsym $mod+Shift+7 move container to workspace number 7; workspace number 7
	bindsym $mod+Shift+8 move container to workspace number 8; workspace number 8

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+Shift+t layout tabbed
    bindsym $mod+Shift+s layout stacking
    #bindsym $mod+Tab layout toggle split
    bindsym mod1+Tab layout toggle tabbed split
	bindsym $mod+Tab layout toggle splitv splith

    # Make the current focus fullscreen
    bindsym $mod+Shift+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+z move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+z scratchpad show
#
# Resizing containers:
#
	mode "resize" {
		# left will shrink the containers width
		# right will grow the containers width
		# up will shrink the containers height
		# down will grow the containers height
		bindsym $left resize shrink width 10px
		bindsym $down resize grow height 10px
		bindsym $up resize shrink height 10px
		bindsym $right resize grow width 10px

		# ditto, with arrow keys
		bindsym Left resize shrink width 10px
		bindsym Down resize grow height 10px
		bindsym Up resize shrink height 10px
		bindsym Right resize grow width 10px

		# return to default mode
		bindsym Return mode "default"
		bindsym Escape mode "default"
	}
	bindsym $mod+r mode "resize"

#
# application settings
#
	for_window [class="(?i)(?:Steam|pavucontrol)"] floating enable, focus
	for_window [class="(?i)(?:tilix|thunar)"] focus
	for_window [class="(?i)(?:mousepad|Chromium|tint2conf)"] focus

	# Assign Applications to specific workspace
	# get class with xprop
	assign [class="(?i)(?:tint2conf)|pamac-manager"] → workspace number 1
	assign [class="(?i)(?:Chromium|qutebrowser)"] → workspace number 2
	assign [class="(?i)(?:Steam)"] → workspace number 4
	assign [class="(?i)(?:gimp-*)"] → workspace number 6
	assign [class="(?i)(?:inkscape)"] → workspace number 6
	assign [class="(?i)(?:feh)"] → workspace number 6
	assign [class="(?i)(?:game.py)"] → workspace number 4
	assign [title="squarely"] → workspace number 2
	assign [class="(?i)(?:jetbrains*|codeblocks)"] → workspace number 8

	# focus, floating, & sticky
	for_window [title="(?i)(?:copying|deleting|moving|catfish)"] floating enable, border none
	for_window [class="(?i)(?:pavucontrol|termite|game.py|galculator|baobab|gnome-disks)"] floating enable, focus
	for_window [window_role="(?i)(?:pop-up|setup|Arch)"] floating enable, focus
	for_window [window_role="(?i)(?:browser)"] floating disable
	for_window [title="Google Hangouts*"] resize set width 560 px
	for_window [title="squarely*"] resize set height 870 px
	for_window [class="(?i)(?:codeblocks|tilix|jetbrains*)"] focus
	for_window [title="Confirm*|Preferencje*|Sterowanie g*|Calendar*"] floating enable
	for_window [title="galculator*"] floating enable
	for_window [title="Azote*"] floating enable, focus
	for_window [title="feh*"] floating enable, focus
	for_window [title="Chromium*"] floating disable, border none
	for_window [title="xfce4-*"] border none
	for_window [title="Tilix*"] focus

#
# Status Bar(s):
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    # PRIMARY TOP
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

    colors {
        statusline #ffffff
        background #202020
        inactive_workspace #32323299 #32323299 #6c6c6c
    }
    font pango:Weather Icons 11
    #status_padding 5
    status_edge_padding 5
    output eDP-1
	tray_output eDP-1
	icon_theme Papirus
	status_command py3status
}

bar {
	# PRIMARY BOTTOM
    position bottom
    workspace_buttons no
    tray_output none
    colors {
        statusline #ffffff
        background #0F0F0F
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
    #font pango:Weather Icons 10
    status_padding 5
    status_edge_padding 15
    output eDP-1

    status_command py3status -c /home/piotr/.config/py3status/config_primary_bottom
}

bar {
    # SECONDARY TOP
    position top
	tray_output none
    colors {
        statusline #ffffff
        background #202020
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
    font pango:Ubuntu Mono Nerd 10
    output HDMI-A-1
}

# /etc/sway/config.d/swayshot file uses `Mod1` variable instead of `mod1`
# Let's comment it out and substitute below
# include /etc/sway/config.d/*

bindsym Print exec swayshot
bindsym Control+Print exec swayshot window
bindsym Shift+Control+Print exec swayshot region